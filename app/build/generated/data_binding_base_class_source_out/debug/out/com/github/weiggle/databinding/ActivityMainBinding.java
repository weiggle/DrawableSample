// Generated by view binder compiler. Do not edit!
package com.github.weiggle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.weiggle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView animationDrawable;

  @NonNull
  public final TextView colorDrawable;

  @NonNull
  public final View gradientDrawable;

  @NonNull
  public final ImageView layerDrawable;

  @NonNull
  public final View lineDrawable;

  @NonNull
  public final View ovalDrawable1;

  @NonNull
  public final View ovalDrawable2;

  @NonNull
  public final View ovalDrawable3;

  @NonNull
  public final TextView ripplesDrawable;

  @NonNull
  public final TextView selectedDrawable;

  @NonNull
  public final View shapeDrawable;

  @NonNull
  public final TextView stateListDrawable;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull ImageView animationDrawable,
      @NonNull TextView colorDrawable, @NonNull View gradientDrawable,
      @NonNull ImageView layerDrawable, @NonNull View lineDrawable, @NonNull View ovalDrawable1,
      @NonNull View ovalDrawable2, @NonNull View ovalDrawable3, @NonNull TextView ripplesDrawable,
      @NonNull TextView selectedDrawable, @NonNull View shapeDrawable,
      @NonNull TextView stateListDrawable) {
    this.rootView = rootView;
    this.animationDrawable = animationDrawable;
    this.colorDrawable = colorDrawable;
    this.gradientDrawable = gradientDrawable;
    this.layerDrawable = layerDrawable;
    this.lineDrawable = lineDrawable;
    this.ovalDrawable1 = ovalDrawable1;
    this.ovalDrawable2 = ovalDrawable2;
    this.ovalDrawable3 = ovalDrawable3;
    this.ripplesDrawable = ripplesDrawable;
    this.selectedDrawable = selectedDrawable;
    this.shapeDrawable = shapeDrawable;
    this.stateListDrawable = stateListDrawable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationDrawable;
      ImageView animationDrawable = ViewBindings.findChildViewById(rootView, id);
      if (animationDrawable == null) {
        break missingId;
      }

      id = R.id.colorDrawable;
      TextView colorDrawable = ViewBindings.findChildViewById(rootView, id);
      if (colorDrawable == null) {
        break missingId;
      }

      id = R.id.gradientDrawable;
      View gradientDrawable = ViewBindings.findChildViewById(rootView, id);
      if (gradientDrawable == null) {
        break missingId;
      }

      id = R.id.layerDrawable;
      ImageView layerDrawable = ViewBindings.findChildViewById(rootView, id);
      if (layerDrawable == null) {
        break missingId;
      }

      id = R.id.lineDrawable;
      View lineDrawable = ViewBindings.findChildViewById(rootView, id);
      if (lineDrawable == null) {
        break missingId;
      }

      id = R.id.ovalDrawable1;
      View ovalDrawable1 = ViewBindings.findChildViewById(rootView, id);
      if (ovalDrawable1 == null) {
        break missingId;
      }

      id = R.id.ovalDrawable2;
      View ovalDrawable2 = ViewBindings.findChildViewById(rootView, id);
      if (ovalDrawable2 == null) {
        break missingId;
      }

      id = R.id.ovalDrawable3;
      View ovalDrawable3 = ViewBindings.findChildViewById(rootView, id);
      if (ovalDrawable3 == null) {
        break missingId;
      }

      id = R.id.ripplesDrawable;
      TextView ripplesDrawable = ViewBindings.findChildViewById(rootView, id);
      if (ripplesDrawable == null) {
        break missingId;
      }

      id = R.id.selectedDrawable;
      TextView selectedDrawable = ViewBindings.findChildViewById(rootView, id);
      if (selectedDrawable == null) {
        break missingId;
      }

      id = R.id.shapeDrawable;
      View shapeDrawable = ViewBindings.findChildViewById(rootView, id);
      if (shapeDrawable == null) {
        break missingId;
      }

      id = R.id.stateListDrawable;
      TextView stateListDrawable = ViewBindings.findChildViewById(rootView, id);
      if (stateListDrawable == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, animationDrawable, colorDrawable,
          gradientDrawable, layerDrawable, lineDrawable, ovalDrawable1, ovalDrawable2,
          ovalDrawable3, ripplesDrawable, selectedDrawable, shapeDrawable, stateListDrawable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
